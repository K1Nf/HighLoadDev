// <auto-generated />
using System;
using HighLoadDevelopment.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HighLoadDevelopment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241128071851_Addedcommenttable")]
    partial class Addedcommenttable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HighLoadDevelopment.Models.Comment", b =>
                {
                    b.Property<Guid>("MeetingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.HasKey("MeetingId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Meeting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentGuestsCount")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxGuest")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("TimeEnd")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("TimeStart")
                        .HasColumnType("time without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.MeetingsAndTags", b =>
                {
                    b.Property<Guid>("MeetingId")
                        .HasColumnType("uuid");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.HasKey("MeetingId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("MeetingsAndTags");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "get_list_user",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(5981),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "get_list_user"
                        },
                        new
                        {
                            Id = 7,
                            Code = "get_list_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6431),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "get_list_role"
                        },
                        new
                        {
                            Id = 13,
                            Code = "get_list_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6441),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "get_list_permission"
                        },
                        new
                        {
                            Id = 2,
                            Code = "read_user",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6422),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "read_user"
                        },
                        new
                        {
                            Id = 8,
                            Code = "read_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6433),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "read_role"
                        },
                        new
                        {
                            Id = 14,
                            Code = "read_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6443),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "read_permission"
                        },
                        new
                        {
                            Id = 3,
                            Code = "create_user",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6424),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "create_user"
                        },
                        new
                        {
                            Id = 9,
                            Code = "create_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6435),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "create_role"
                        },
                        new
                        {
                            Id = 15,
                            Code = "create_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6444),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "create_permission"
                        },
                        new
                        {
                            Id = 4,
                            Code = "update_user",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6426),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "update_user"
                        },
                        new
                        {
                            Id = 10,
                            Code = "update_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6436),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "update_role"
                        },
                        new
                        {
                            Id = 16,
                            Code = "update_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6449),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "update_permission"
                        },
                        new
                        {
                            Id = 5,
                            Code = "delete_user",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6428),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "delete_user"
                        },
                        new
                        {
                            Id = 11,
                            Code = "delete_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6438),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "delete_role"
                        },
                        new
                        {
                            Id = 17,
                            Code = "delete_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6450),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "delete_permission"
                        },
                        new
                        {
                            Id = 6,
                            Code = "restore_user",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6430),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "restore_user"
                        },
                        new
                        {
                            Id = 12,
                            Code = "restore_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6440),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "restore_role"
                        },
                        new
                        {
                            Id = 18,
                            Code = "restore_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6452),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "restore_permission"
                        },
                        new
                        {
                            Id = 19,
                            Code = "get_story_user",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6454),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "get_story_user"
                        },
                        new
                        {
                            Id = 20,
                            Code = "get_story_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6455),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "get_story_role"
                        },
                        new
                        {
                            Id = 21,
                            Code = "get_story_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6457),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "get_story_permission"
                        },
                        new
                        {
                            Id = 23,
                            Code = "rollback_role",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6460),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "rollback_role"
                        },
                        new
                        {
                            Id = 22,
                            Code = "rollback_permission",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 48, 279, DateTimeKind.Utc).AddTicks(6459),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "rollback_permission"
                        });
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Reason")
                        .HasColumnType("integer");

                    b.Property<Guid>("ReportedId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReporterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReporterId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Admin",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 9, DateTimeKind.Utc).AddTicks(1562),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "User",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 9, DateTimeKind.Utc).AddTicks(1566),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Guest",
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 9, DateTimeKind.Utc).AddTicks(1568),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.RolesAndPermissions", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolesAndPermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(796),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(799),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(801),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(802),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(804),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(806),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(807),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(809),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(811),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(812),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(814),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(823),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(825),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(827),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(828),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(830),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(832),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(835),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 19,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(836),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 20,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(838),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 21,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(840),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 1,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(841),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 4,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(843),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 10,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(844),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 1,
                            Created_At = new DateTime(2024, 11, 28, 7, 18, 49, 12, DateTimeKind.Utc).AddTicks(846),
                            Created_By = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountRating")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageLink")
                        .HasColumnType("text");

                    b.Property<string>("Information")
                        .HasColumnType("text");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("SecondName")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.UsersAndRoles", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersAndRoles");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.UsersAndTags", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("UsersAndTags");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Visit", b =>
                {
                    b.Property<Guid>("MeetingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Created_By")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("Deleted_By")
                        .HasColumnType("uuid");

                    b.Property<int?>("Mark")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Marked_At")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MeetingId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Comment", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.Meeting", "Meeting")
                        .WithMany("Comments")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighLoadDevelopment.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.File", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.User", "User")
                        .WithOne("File")
                        .HasForeignKey("HighLoadDevelopment.Models.File", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Meeting", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.User", "User")
                        .WithMany("Meetings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.MeetingsAndTags", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighLoadDevelopment.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Report", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.RolesAndPermissions", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighLoadDevelopment.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.UsersAndRoles", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighLoadDevelopment.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.UsersAndTags", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighLoadDevelopment.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Visit", b =>
                {
                    b.HasOne("HighLoadDevelopment.Models.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HighLoadDevelopment.Models.User", "User")
                        .WithMany("Visits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.Meeting", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("HighLoadDevelopment.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("File")
                        .IsRequired();

                    b.Navigation("Meetings");

                    b.Navigation("Reports");

                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
